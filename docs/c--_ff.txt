
FIRST sets:
  addsub_exp:   ID INTCON LPAREN opSUB 
  addsub_no_lr:   opADD opSUB <epsilon> 
  and_exp:   ID INTCON LPAREN opSUB 
  and_no_lr:   opAND <epsilon> 
  arith_exp:   ID INTCON LPAREN opSUB 
  assg_stmt:   opASSG 
  bool_exp:   ID INTCON LPAREN opSUB 
  expr_list:   COMMA <epsilon> 
  fn_call:   LPAREN 
  fn_or_assg:   opASSG LPAREN 
  formals:   COMMA <epsilon> 
  func_defn:   LPAREN 
  func_var:   LPAREN SEMI COMMA 
  if_stmt:   kwIF 
  muldiv_exp:   ID INTCON LPAREN opSUB 
  muldiv_no_lr:   opMUL opDIV <epsilon> 
  opt_arith_exp:   <epsilon> ID INTCON LPAREN opSUB 
  opt_else:   kwELSE <epsilon> 
  opt_expr_list:   <epsilon> ID INTCON LPAREN opSUB 
  opt_fn_call:   LPAREN <epsilon> 
  opt_formals:   <epsilon> kwINT 
  opt_stmt_list:   <epsilon> ID kwIF kwRETURN LBRACE SEMI kwWHILE 
  opt_var_decls:   <epsilon> kwINT 
  or_exp:   ID INTCON LPAREN opSUB 
  or_no_lr:   opOR <epsilon> 
  prog:   <epsilon> kwINT 
  relop:   opEQ opNE opLE opLT opGE opGT 
  return_stmt:   kwRETURN 
  stmt:   ID kwIF kwRETURN LBRACE SEMI kwWHILE 
  type:   kwINT 
  var_decl:   SEMI COMMA 
  while_stmt:   kwWHILE 

FOLLOW sets:
  addsub_exp:   RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  addsub_no_lr:   RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  and_exp:   opOR RPAREN 
  and_no_lr:   opOR RPAREN 
  arith_exp:   opMUL opDIV opADD opSUB RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  assg_stmt:   SEMI 
  bool_exp:   opAND opOR RPAREN 
  expr_list:   RPAREN 
  fn_call:   SEMI opMUL opDIV opADD opSUB RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR 
  fn_or_assg:   SEMI 
  formals:   RPAREN 
  func_defn:   kwINT <EOF> 
  func_var:   kwINT <EOF> 
  if_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  muldiv_exp:   opADD opSUB RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  muldiv_no_lr:   opADD opSUB RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  opt_arith_exp:   SEMI 
  opt_else:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  opt_expr_list:   RPAREN 
  opt_fn_call:   opMUL opDIV opADD opSUB RPAREN opEQ opNE opLE opLT opGE opGT opAND COMMA opOR SEMI 
  opt_formals:   RPAREN 
  opt_stmt_list:   RBRACE 
  opt_var_decls:   ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  or_exp:   RPAREN 
  or_no_lr:   RPAREN 
  prog:   <EOF> 
  relop:   ID INTCON LPAREN opSUB 
  return_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  type:   ID 
  var_decl:   kwINT ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE <EOF> 
  while_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
